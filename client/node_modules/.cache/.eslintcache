[{"/mnt/e/Programming/chatbox/client/src/index.js":"1","/mnt/e/Programming/chatbox/client/src/App.js":"2","/mnt/e/Programming/chatbox/client/src/Components/LoginPage/LoginPage.js":"3","/mnt/e/Programming/chatbox/client/src/Components/Dock/Dock.js":"4","/mnt/e/Programming/chatbox/client/src/Components/Dock/Chats/Chats.js":"5","/mnt/e/Programming/chatbox/client/src/Components/Dock/DashBoard/DashBoard.js":"6","/mnt/e/Programming/chatbox/client/src/Components/Dock/Notifications/Notification.js":"7","/mnt/e/Programming/chatbox/client/src/Components/Dock/Settings/Settings.js":"8"},{"size":195,"mtime":1641127430294,"results":"9","hashOfConfig":"10"},{"size":384,"mtime":1641151096875,"results":"11","hashOfConfig":"10"},{"size":2962,"mtime":1641154706390,"results":"12","hashOfConfig":"10"},{"size":4741,"mtime":1641127430246,"results":"13","hashOfConfig":"10"},{"size":2604,"mtime":1641128054996,"results":"14","hashOfConfig":"10"},{"size":210,"mtime":1641127430237,"results":"15","hashOfConfig":"10"},{"size":226,"mtime":1641127430252,"results":"16","hashOfConfig":"10"},{"size":206,"mtime":1641127430262,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1tgszom",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/mnt/e/Programming/chatbox/client/src/index.js",[],["38","39"],"/mnt/e/Programming/chatbox/client/src/App.js",["40","41","42"],"import LoginPage from './Components/LoginPage/LoginPage.js';\nimport Dock from './Components/Dock/Dock.js';\nimport io from \"socket.io-client\";\nimport Chats from './Components/Dock/Chats/Chats.js';\n\nconst socket = io.connect(\"http://localhost:8080/\")\n\nfunction App() {\n  return(\n    <div>\n      <LoginPage />\n      {/* <Dock socket={socket}/> */}\n    </div>\n  );\n}\n\nexport default App;\n","/mnt/e/Programming/chatbox/client/src/Components/LoginPage/LoginPage.js",["43"],"/mnt/e/Programming/chatbox/client/src/Components/Dock/Dock.js",["44","45","46","47","48","49","50"],"import \"./Dock.css\"\nimport {Helmet} from \"react-helmet\";\nimport DashBoard from \"./DashBoard/DashBoard\";\nimport Chats from \"./Chats/Chats.js\"\nimport Notifications from \"./Notifications/Notification\";\nimport Settings from \"./Settings/Settings\";\nimport { useState } from 'react'\n\nfunction Dock({socket}){\n\n    const [dashBoardisOpen, setDashBoardopen] = useState(false);\n    const [chatisOpen, setChatopen] = useState(false);\n    const [notificationisOpen, setNotificationsopen] = useState(false);\n    const [settingisOpen, setSettingsopen] = useState(false);\n\n    // For DashBoard Handling\n    function openDashBoard(){\n        setDashBoardopen(true);\n    }\n\n    function closeDashBoard(){\n        setDashBoardopen(false);\n    }\n\n    //For Chat Handling\n    function openChats(){\n        setChatopen(true);\n    }\n\n    function closeChats(){\n        setChatopen(false);\n    }\n\n    //For Notifications Handling\n    function openNotifications(){\n        setNotificationsopen(true);\n    }\n\n    function closeNotifications(){\n        setNotificationsopen(false);\n    }\n\n    //For Settings Handling\n    function openSettings(){\n        setSettingsopen(true);\n    }\n\n    function closeSettings(){\n        setSettingsopen(false);\n    }\n\n    function active(e){\n        if(document.getElementById(e).className == 'list'){\n            for(let i = 1; i <= 4; i++){\n                document.getElementById(i).className = 'list';\n            }\n            document.getElementById(\"yourImage\").style.visibility = 'hidden'\n            document.getElementById(e).className = 'listActive';\n        }\n        switch(e){\n            case 1: {\n                openDashBoard();\n                closeChats();\n                closeNotifications();\n                closeSettings();\n                break;\n            }\n\n            case 2: {\n                closeDashBoard();\n                openChats();\n                closeNotifications();\n                closeSettings();\n                break;\n            }\n\n            case 3: {\n                closeDashBoard();\n                closeChats();\n                openNotifications();\n                closeSettings();\n                break;\n            }\n\n            case 4: {\n                closeDashBoard();\n                closeChats();\n                closeNotifications();\n                openSettings();\n                break;\n            }\n        }\n    }\n\n    return(\n        <div>\n            <div><img id=\"yourImage\" src=\"../logo192.png\" /></div>\n            <div className=\"dock\">\n            <ul>\n                <li className=\"list\" id=\"1\" onClick={() => active(1)}>\n                    <a href=\"#\">\n                        <div className=\"indicator\" id=\"indicator1\"></div>\n                        <span className=\"icon\"><ion-icon name=\"apps-outline\"></ion-icon></span>\n                        <span className=\"text\">DashBoard</span>  \n                    </a>       \n                </li>\n\n                <li className=\"list\" id=\"2\" onClick={() => active(2)}>\n                    <a href=\"#\">\n                        <div className=\"indicator\" id=\"indicator2\"></div> \n                        <span className=\"icon\"><ion-icon name=\"chatbubbles-outline\"></ion-icon></span>\n                        <span className=\"text\">Chats</span>\n                    </a>        \n                </li>\n\n                <li className=\"list\" id=\"3\" onClick={() => active(3)}>\n                    <a href=\"#\">\n                        <div className=\"indicator\" id=\"indicator3\"></div>\n                        <span className=\"icon\"><ion-icon name=\"notifications-outline\"></ion-icon></span>\n                        <span className=\"text\">Notifications</span>\n                    </a>                     \n                </li>\n\n                <li className=\"list\" id=\"4\" onClick={() => active(4)}>\n                    <a href=\"#\">\n                        <div className=\"indicator\" id=\"indicator4\"></div>\n                        <span className=\"icon\"><ion-icon name=\"cog-outline\"></ion-icon></span>\n                        <span className=\"text\">Settings</span>\n                    </a>                             \n                </li>\n            </ul>\n            <Helmet>\n                <script type=\"module\" src=\"https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js\"></script>\n                <script nomodule src=\"https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js\"></script>\n            </Helmet>\n        </div>\n        \n        <div>\n            {chatisOpen && <Chats socket={socket}/>}\n            {dashBoardisOpen && <DashBoard />}\n            {notificationisOpen && <Notifications />}\n            {settingisOpen && <Settings />}\n        </div> \n    </div>\n    );\n}\n\nexport default Dock;","/mnt/e/Programming/chatbox/client/src/Components/Dock/Chats/Chats.js",["51"],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport '../Chats/Chats.css';\nimport Dock from '../Dock.js';\n\n\nfunction Chats({socket}){\n\n    const [newMessage, setNewMessage] = useState(\"\");\n\n    const sendMessage = async () => {\n        if (newMessage !== \"\") {\n          const mData = {\n            room : '123',\n            author : 'Ali',\n            message : newMessage,\n            time : new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n        };\n    \n        await socket.emit(\"send_message\", mData);\n\n        //   setMessageList((list) => [...list, messageData]);\n        //   setNewMessage(\"\");\n        }\n      };\n\n      useEffect(() => {\n        socket.on(\"receive_message\", (data) => {\n            console.log(data);\n        //   setMessageList((list) => [...list, data]);\n        });\n      }, [socket]);\n\n    return(\n        <div className='outerBox'>\n            <div className=\"leftColumn\">\n                <div className=\"upperLeft\">\n                    <img src=\"https://www.kindpng.com/picc/m/690-6904538_men-profile-icon-png-image-free-download-searchpng.png\" alt=\"\" />\n                    <p className=\"userName\">Muhammad Azeem</p>\n                </div>\n                <div className=\"lowerLeft\">\n                    <p className=\"title\">About:</p>\n                    <p className=\"details\">Too lazy</p>\n                    <p className=\"title\">Phone Number:</p>\n                    <p className=\"details\">0314114714</p>\n                    <p className=\"title\">Email:</p>\n                    <p className=\"details\">mazeem8856@gmail.com</p>\n                    <p className=\"title\">Status:</p>\n                    <p className=\"details\">Single</p>\n                </div>\n            </div>\n            <div className=\"centerColumn\">\n                <div className=\"messageBox\">\n                    <div className=\"messageText\">\n                        <input type=\"text\" placeholder=\"Write Message...\" value={newMessage} onChange={(event)=>{\n                            setNewMessage(event.target.value);\n                        }} onKeyPress={(event) => {\n                            event.key === \"Enter\" && sendMessage();\n                        }}/>\n                    </div>\n                    <div className=\"sendButton\">\n                        <button type='submit' onClick={sendMessage}><ion-icon size=\"large\" name=\"send\"></ion-icon></button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"rightColumn\">\n            </div>\n        </div>\n    );\n}\n\nexport default Chats;","/mnt/e/Programming/chatbox/client/src/Components/Dock/DashBoard/DashBoard.js",[],"/mnt/e/Programming/chatbox/client/src/Components/Dock/Notifications/Notification.js",[],"/mnt/e/Programming/chatbox/client/src/Components/Dock/Settings/Settings.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":8,"nodeType":"58","messageId":"59","endLine":2,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":13},{"ruleId":"56","severity":1,"message":"61","line":6,"column":7,"nodeType":"58","messageId":"59","endLine":6,"endColumn":13},{"ruleId":"62","severity":1,"message":"63","line":41,"column":13,"nodeType":"64","endLine":41,"endColumn":36},{"ruleId":"65","severity":1,"message":"66","line":53,"column":49,"nodeType":"67","messageId":"68","endLine":53,"endColumn":51},{"ruleId":"69","severity":1,"message":"70","line":60,"column":9,"nodeType":"71","messageId":"72","endLine":92,"endColumn":10},{"ruleId":"73","severity":1,"message":"74","line":97,"column":18,"nodeType":"64","endLine":97,"endColumn":61},{"ruleId":"62","severity":1,"message":"63","line":101,"column":21,"nodeType":"64","endLine":101,"endColumn":33},{"ruleId":"62","severity":1,"message":"63","line":109,"column":21,"nodeType":"64","endLine":109,"endColumn":33},{"ruleId":"62","severity":1,"message":"63","line":117,"column":21,"nodeType":"64","endLine":117,"endColumn":33},{"ruleId":"62","severity":1,"message":"63","line":125,"column":21,"nodeType":"64","endLine":125,"endColumn":33},{"ruleId":"56","severity":1,"message":"57","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":12},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Dock' is defined but never used.","Identifier","unusedVar","'Chats' is defined but never used.","'socket' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]